variables:
    GIT_DEPTH: 0
    GIT_STRATEGY: fetch

stages:
    - compile
    - test
    - quality

.ciconf:
    only:
        variables:
            - $CI_PROJECT_NAMESPACE == "keszocze"

compile_gcc:
    extends: .ciconf
    stage: compile
    artifacts:
        paths:
            - build
        expire_in: 30 minutes

    script:
        - mkdir -p build/bw_output
        - cd build
        - CC=gcc-8 CXX=g++-8 cmake ..
        - /opt/sonar-build-wrapper/build-wrapper-linux-x86-64 --out-dir bw_output make -j 4 all

compile_clang:
    extends: .ciconf
    stage: compile
    script:
        - mkdir build
        - cd build
        - CC=clang-9 CXX=clang++-9 cmake ..
        - make -j 4
        - make test
        - if !$?; then return 1; fi

run_sonarqube:
    extends: .ciconf
    stage: quality
    script: 
        - echo $CI_COMMIT_REF_NAME
        - chmod +x scripts/mk_sonar_config.sh
        - scripts/mk_sonar_config.sh $CI_COMMIT_REF_NAME > sonar-project.properties
        - /opt/sonar-scanner/bin/sonar-scanner

run_tests:
    extends: .ciconf
    stage: test
    artifacts:
        paths:
            - build/tests/coverage
        expire_in: 30 minutes
    script:
        - cd build
        - make test
        - if !$?; then return 1; fi
        - cd tests
        - export GCOV_PREFIX_STRIP=10
        - rm -rf coverage
        - mkdir -p coverage
        - /opt/software/usr/local/bin/gcovr --gcov-executable gcov-8 -v --filter '/var/lib/gitlab-runner/builds/.+/0/keszocze/aarith' --object-directory CMakeFiles --sonarqube coverage/coverage.xml 
        - sed -i -E "s/\/var\/lib\/gitlab-runner\/builds\/[[:alnum:]]+\/[[:digit:]]+\/keszocze\/aarith\///g" coverage/coverage.xml
