variables:
    GIT_DEPTH: 0
    GIT_SUBMODULE_STRATEGY: recursive
    MPIR_PARAMS: "-DMPIR_INCLUDE_DIR=/opt/software/usr/local/include -DMPIR_LIBRARIES=/opt/software/usr/local/lib/libmpir.a"
    BUILD_PARAMS: "-DUSE_CLANGTIDY=OFF -DBUILD_BENCHMARKS=OFF -DBUILD_TESTS=ON -DUSE_FULL_RANGE_IN_TESTS=OFF -DBUILD_EXAMPLES=ON -DBUILD_EXPERIMENTS=ON -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DBENCHMARK_ENABLE_TESTING=OFF"

stages:
    - compile
    - test
    - quality

.ciconf:
    only:
        variables:
            - $CI_PROJECT_NAMESPACE == "keszocze"
compile_gcc:
    extends: .ciconf
    stage: compile
    artifacts:
        paths:
            - build/gcc
        expire_in: 30 minutes

    script:
        - mkdir -p build/gcc/bw_output
        - cd build/gcc
        - echo ${BUILD_PARAMS}
        - echo ${MPIR_PARAMS}
        - CC=gcc-9 CXX=g++-9 cmake ${BUILD_PARAMS} ${MPIR_PARAMS}  ../..
        - make -j $(nproc) all

compile_clang:
    extends: .ciconf
    stage: compile
    artifacts:
        paths:
            - build/clang
        expire_in: 30 minutes
    script:
        - mkdir -p build/clang
        - cd build/clang
        - echo ${BUILD_PARAMS}
        - echo ${MPIR_PARAMS}
        - CC=clang-9 CXX=clang++-9 cmake ${BUILD_PARAMS} ${MPIR_PARAMS} ../..
        - make -j $(nproc)


test_clang:
    extends: .ciconf
    stage: test
    variables:
        GIT_STRATEGY: none
    dependencies:
        - compile_clang
    needs:
        - compile_clang
    script:
        - cd build/clang
        - rm CMakeCache.txt
        - make CTEST_OUTPUT_ON_FAILURE=1 test

test_gcc:
    extends: .ciconf
    stage: test
    variables:
        GIT_STRATEGY: none
    dependencies:
        - compile_gcc
    needs:
        - compile_gcc
    artifacts:
        paths:
            - build/tests/coverage
        expire_in: 30 minutes
    script:
        - cd build/gcc
        - rm CMakeCache.txt
        - make CTEST_OUTPUT_ON_FAILURE=1 test
        - if !$?; then return 1; fi
        - cd tests
        - export GCOV_PREFIX_STRIP=10
        - rm -rf coverage
        - mkdir -p coverage
        - /opt/software/usr/local/bin/gcovr --gcov-executable gcov-8 -v --filter '/var/lib/gitlab-runner/builds/.+/0/keszocze/aarith' --object-directory CMakeFiles --sonarqube coverage/coverage.xml
        - sed -i -E "s/\/var\/lib\/gitlab-runner\/builds\/[[:alnum:]]+\/[[:digit:]]+\/keszocze\/aarith\///g" coverage/coverage.xml
